name: Organize Images to Range Branches

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Dry run (only show what would be moved)"
        type: boolean
        default: false
        required: false

jobs:
  organize-images:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Initial disk space cleanup
        run: |
          echo "Performing initial system cleanup..."
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /usr/local/share/powershell
          df -h

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0  # Need full history to get all branches
          ref: main
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Run organize script
        id: organize
        run: |
          python organize_images.py ${{ inputs.dry_run }}

      - name: Commit changes to branches
        if: ${{ !inputs.dry_run }}
        run: |
          if [ ! -f moved_files.txt ]; then
            echo "No files were moved"
            exit 0
          fi

          git config user.name "${{ github.repository_owner }}"
          git config user.email "${{ github.repository_owner }}@users.noreply.github.com"

          # Process files in batches
          batch_size=10
          batch_count=0
          declare -A branch_files
          declare -A source_files

          # Group files by branch
          while IFS=$'\t' read -r file branch source; do
            if [ -z "${branch_files[$branch]}" ]; then
              branch_files[$branch]=""
              source_files[$branch]=""
            fi
            branch_files[$branch]="${branch_files[$branch]} $file"
            source_files[$branch]="${source_files[$branch]} $source"
            ((batch_count++))
          done < moved_files.txt

          # Process each branch
          for branch in "${!branch_files[@]}"; do
            echo "Processing branch: $branch"
            
            # Checkout or create branch
            git checkout "$branch" 2>/dev/null || git checkout -b "$branch"
            
            # Add files to branch
            for file in ${branch_files[$branch]}; do
              if [ -f "$file" ]; then
                mkdir -p "$(dirname "$file")"
                git add "$file"
              fi
            done
            
            # Commit and push if there are changes
            if ! git diff --cached --quiet; then
              git commit -m "chore: organize images into correct range folders"
              git push origin "$branch"
            fi
            
            # Switch to main and remove source files
            git checkout main
            for source in ${source_files[$branch]}; do
              if [ -f "$source" ]; then
                git rm -f "$source"
              fi
            done
            
            # Commit and push main if there are changes
            if ! git diff --cached --quiet; then
              git commit -m "chore: remove organized images from main branch"
              git push origin main
            fi
            
            # Cleanup to save space
            git gc --auto --quiet
          done

      - name: Cleanup
        if: always()
        run: |
          rm -f moved_files.txt
          git checkout main
          echo "Cleanup complete" 